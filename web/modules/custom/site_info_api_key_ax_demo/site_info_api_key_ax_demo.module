<?php

/**
 * @file
 * Contains site_info_api_key_ax_demo.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function site_info_api_key_ax_demo_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the site_info_api_key_ax_demo module.
    case 'help.page.site_info_api_key_ax_demo':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('A new form text field named &quot;Site API Key&quot; need added to the &quot;Site Configuration&quot; form.') . '</p>';
      return $output;

    default:
  }
}


/**
 * Implements hook_form_alter().
 *
 * @param $form
 * @param $form_state
 * @param $form_id
 */

function site_info_api_key_ax_demo_form_system_site_information_settings_alter(&$form, $form_state, $form_id)
{

  // Added Site API Key field to Site Information page
  $site_api_key = \Drupal::config('siteapikey.configuration')->get('siteapikey');
  $form['site_information']['site_api_key'] = array(
    '#type' => 'textfield',
    '#title' => t('Site API Key'),
    '#default_value' => $site_api_key,
    '#description' => t('An API Key to access site pages in JSON format.'),
  );

  // 'Update Configuration' Update the value of the submit button as per requirement.
  $form['actions']['submit']['#value'] = t('Update configuration');

  // Attach custom form submit handler
  $form['#submit'][] = 'site_info_api_key_ax_demo_handler';
}

function site_info_api_key_ax_demo_handler($form, &$form_state)
{
  // Set the updated value for system variable Site API Key
  $config = \Drupal::configFactory()->getEditable('siteapikey.configuration');
  $new_site_api_key = $form_state->getValue(['site_api_key']);
  $config->set('siteapikey', $new_site_api_key);
  $config->save();

  // Set site message indicating key has been stored
  \Drupal::messenger()->addMessage("Successfully set Site API Key to " . $new_site_api_key);
}

/**
 * Implements hook_uninstall().
 */
function site_api_key_uninstall(){
  // Delete the previous value
  \Drupal::configFactory()->getEditable('siteapikey.configuration')->delete();
}
